---
title: "Supervision 5"
format: html
execute:
  echo: true
  warning: false
  message: false

---

## Lab 18 - Hedonic Price Modelling: The Golden Regression Challenge

> This supervision is **live now**. Students have several days to complete the task.  
> Submissions are evaluated **automatically** using an AI‚Äëassisted rubric plus model metrics. See **Submission** for exact deliverables.

### üéØ  Learning Outcomes

By the end of this supervision, you should be able to:

- Apply the concept of **hedonic pricing** to a real dataset.  
- Develop and justify a **regression model** explaining variation in house prices.  
- Evaluate competing model specifications and defend modelling choices.  
- Communicate results clearly to peers and engage in critical discussion.  

---

## Part A ‚Äî Data Preparation

In this supervision, we will use the **Ames Housing** dataset (De Cock, 2011), a real dataset widely used in econometrics and data science to study housing markets. It contains information on residential properties in Ames, Iowa, USA, including price, structural features, and neighbourhood characteristics.

Run the following once to produce **`hedonic_ames.csv`** for your analysis.

```{r}
# Install if you have NOT done so.
# Installl de following package once
# install.packages("AmesHousing")
# install.packages("dplyr")
# install.packages("readr")
# install.packages("janitor")
# install.packages("stringr")

library(AmesHousing)
library(dplyr)
library(readr)
library(janitor)
library(stringr)

# Load full Ames data
ames <- AmesHousing::make_ames()

# Minimal cleaning and engineered features
df <- ames %>%
  janitor::clean_names() %>%
  dplyr::transmute(
    sale_price,
    gr_liv_area, total_bsmt_sf, lot_area,
    bedroom_abv_gr, full_bath, half_bath, kitchen_abv_gr,
    overall_qual, overall_cond, year_built, year_remod_add,
    exter_qual, kitchen_qual, central_air,
    garage_cars, garage_area, fireplace_qu,
    bldg_type, house_style, neighborhood,
    ms_zoning, foundation
  ) %>%
  dplyr::mutate(
    central_air = factor(central_air, levels = c("N","Y")),
    exter_qual = factor(exter_qual, ordered = TRUE),
    kitchen_qual = factor(kitchen_qual, ordered = TRUE),
    fireplace_qu = factor(fireplace_qu, ordered = TRUE),
    bldg_type = factor(bldg_type),
    house_style = factor(house_style),
    neighborhood = factor(neighborhood),
    ms_zoning = factor(ms_zoning),
    foundation = factor(foundation),
    baths_total = full_bath + 0.5 * half_bath,
    age = pmax(0, 2010 - year_built),
    remod_age = pmax(0, 2010 - year_remod_add)
  ) %>%
  dplyr::filter(
    sale_price > 20000, sale_price < 600000,
    gr_liv_area > 300, lot_area < 100000
  ) %>%
  tidyr::drop_na(sale_price, gr_liv_area, bedroom_abv_gr, baths_total, overall_qual)

set.seed(42)
df <- df %>% dplyr::mutate(listing_id = dplyr::row_number()) %>% dplyr::relocate(listing_id)

readr::write_csv(df, "hedonic_ames.csv")
dplyr::glimpse(df)
```

---

### Part B ‚Äî Task

#### Build Your Hedonic Model

Using **`hedonic_ames.csv`**, specify, estimate, and justify an **OLS** hedonic model explaining **`sale_price`**.  
You may transform variables (e.g., `log(sale_price)`, `log(gr_liv_area)`), include interactions, and compare alternative specifications.  
Aim for **theoretical consistency**, **parsimony**, and **interpretability**.

#### Starter code (illustrative; replace with your own specification)

```{r}
# Installl de following package once
# install.packages(c("readr","dplyr","broom","car","tseries"))

library(readr)
library(dplyr)
library(broom)
library(modelsummary)
library(car)
library(tseries)

# 1. Load data
df <- readr::read_csv("hedonic_ames.csv")

# 2. Transform variables (example)
df <- df %>% dplyr::mutate(
  ln_price = log(sale_price),
  ln_area  = log(gr_liv_area),
  ln_lot   = log(lot_area)
)

# Example baseline Hedonic Model (YOU SHOULD CHANGE/IMPROVE THIS)
m0 <- lm(ln_price ~ ln_area + bedroom_abv_gr + baths_total + total_bsmt_sf +
           garage_cars + central_air + overall_qual + overall_cond +
           exter_qual + kitchen_qual + fireplace_qu +
           bldg_type + house_style + neighborhood,
         data = df)

# Core metrics & diagnostics to report in your table
gl  <- broom::glance(m0)         # adj.r.squared, AIC, sigma (‚âà RMSE on log scale)
vif_mean <- mean(car::vif(m0))
jb_p <- tryCatch(tseries::jarque.bera.test(resid(m0))$p.value, error=function(e) NA_real_)

# Minimal plain‚Äëtext table you can paste into your report.txt
metrics <- tibble::tibble(
  metric = c("Adjusted R2","AIC","RMSE (sigma)","VIF mean","JB p-value"),
  value  = c(gl$adj.r.squared, gl$AIC, gl$sigma, vif_mean, jb_p)
)
print(metrics)
```

> You may create graphs in your analysis, **but do not include images in the report** (text and tables only).

---

### Part C ‚Äî Competition, Criteria & Automated Assessment

#### The Golden Regression Challenge

Your model competes on **quality and clarity**, not just raw fit.  
Evaluation is **automated** using an AI‚Äëassisted rubric plus model metrics.

### Judging Criteria (used by the automation)

1. **Theoretical consistency** ‚Äî expected signs and economic reasoning.  
2. **Specification quality** ‚Äî relevant variables, parsimony, no redundancy.  
3. **Interpretability** ‚Äî meaningful coefficients, multicollinearity controlled.  
4. **Diagnostics and fit** ‚Äî Adjusted¬†R¬≤, AIC, RMSE, residual checks.  
5. **Explanation of results** ‚Äî clear, concise, audience‚Äëappropriate summary.

### Scoring (overview)

- The AI reads a short **plain‚Äëtext report** (see template below) and assigns **1‚Äì5** on each criterion.  
- Model metrics (e.g., **Adjusted¬†R¬≤**, **AIC**, **RMSE**, **VIF mean**) complement the rubric.  
- A composite score ranks entries; the winner receives the **üèÖ Golden Regression Medal**.

---

## Submission

Submit **exactly two files** via the designated Microsoft Form:

1) **`model.R`** ‚Äî your complete, runnable R script (self‚Äëcontained).  
2) **`report.txt`** (or `.md`) ‚Äî **text‚Äëonly**, following the template below. No images; include a small metrics table.

**Report template (copy into `report.txt`):**

```
Golden Regression Challenge ‚Äî Report

Student email: XXXXXXX
Model name: e.g., ln(price) ~ ln(area) + overall_qual + neighborhood + ...

1) Theoretical consistency (‚â§150 words)
[Explain theoretical links and expected signs; note any justified deviations.]

2) Specification quality (‚â§150 words)
[Why these variables? Parsimony; omitted variables considered.]

3) Interpretability (‚â§150 words)
[Coefficient meaning; multicollinearity; any scaling/elasticities.]

4) Diagnostics and fit (‚â§150 words + table)
Provide the following table (plain text):

| Metric           | Value |
|------------------|-------|
| Adjusted R2      | 0.84  |
| AIC              | 1458.2|
| RMSE (sigma)     | 0.21  |
| VIF mean         | 2.1   |
| JB p-value       | 0.22  |

5) Explanation of results (‚â§150 words)
[1‚Äì3 major takeaways for a non-technical audience.]
```

**Notes**  
- Reports exceeding the structure/word caps may receive reduced clarity scores.  
- Do **not** include plots or screenshots in the report. Keep it text‚Äëonly.  
- Your identity is recorded at submission; the AI receives only the report text.


---

üèÅ  *End of lab  18*
üõë Remember to save your script üíæ

---

