---
title: "Supervision 5"
format: html
execute:
  echo: true
  warning: false
  message: false

---

## Lab 18 - Hedonic Price Modelling: The Golden Regression Challenge

> This supervision is **live now**. Students have several days to complete the task.  


### üéØ  Learning Outcomes

By the end of this supervision, you should be able to:

- Apply the concept of **hedonic pricing** to a real dataset.  
- Develop and justify a **regression model** explaining variation in house prices.  
- Evaluate competing model specifications and defend modelling choices.  
- Communicate results clearly to peers and engage in critical discussion.  

---

## Part A ‚Äî Data Preparation

In this supervision, we will use the **Ames Housing** dataset (De Cock, 2011), a real dataset widely used in econometrics and data science to study housing markets. It contains information on residential properties in Ames, Iowa, USA, including price, structural features, and neighbourhood characteristics.

Run the following once to produce **`hedonic_ames.csv`** for your analysis.

```{r}
# Install if you have NOT done so.
# Installl de following package once
# install.packages("AmesHousing")
# install.packages("dplyr")
# install.packages("readr")
# install.packages("janitor")
# install.packages("stringr")

library(AmesHousing)
library(dplyr)
library(readr)
library(janitor)
library(stringr)

# Load full Ames data
ames <- AmesHousing::make_ames()

# Minimal cleaning and engineered features
df <- ames %>%
  janitor::clean_names() %>%
  dplyr::transmute(
    sale_price,
    gr_liv_area, total_bsmt_sf, lot_area,
    bedroom_abv_gr, full_bath, half_bath, kitchen_abv_gr,
    overall_qual, overall_cond, year_built, year_remod_add,
    exter_qual, kitchen_qual, central_air,
    garage_cars, garage_area, fireplace_qu,
    bldg_type, house_style, neighborhood,
    ms_zoning, foundation
  ) %>%
  dplyr::mutate(
    central_air = factor(central_air, levels = c("N","Y")),
    exter_qual = factor(exter_qual, ordered = TRUE),
    kitchen_qual = factor(kitchen_qual, ordered = TRUE),
    fireplace_qu = factor(fireplace_qu, ordered = TRUE),
    bldg_type = factor(bldg_type),
    house_style = factor(house_style),
    neighborhood = factor(neighborhood),
    ms_zoning = factor(ms_zoning),
    foundation = factor(foundation),
    baths_total = full_bath + 0.5 * half_bath,
    age = pmax(0, 2010 - year_built),
    remod_age = pmax(0, 2010 - year_remod_add)
  ) %>%
  dplyr::filter(
    sale_price > 20000, sale_price < 600000,
    gr_liv_area > 300, lot_area < 100000
  ) %>%
  tidyr::drop_na(sale_price, gr_liv_area, bedroom_abv_gr, baths_total, overall_qual)

set.seed(42)
df <- df %>% dplyr::mutate(listing_id = dplyr::row_number()) %>% dplyr::relocate(listing_id)

readr::write_csv(df, "hedonic_ames.csv")
dplyr::glimpse(df)
```

---

### Part B ‚Äî Task

#### Build Your Hedonic Model

Using **`hedonic_ames.csv`**, specify, estimate, and justify an **OLS** hedonic model explaining **`sale_price`**.  
You may transform variables (e.g., `log(sale_price)`, `log(gr_liv_area)`), include interactions, and compare alternative specifications.  
Aim for **theoretical consistency**, **parsimony**, and **interpretability**.

#### Starter code (illustrative; replace with your own specification)

```{r}
# Installl de following package once
# install.packages(c("readr","dplyr","broom","car","tseries"))

library(readr)
library(dplyr)
library(broom)
library(car)
library(lmtest)
library(tseries)
library(sandwich)
library(modelsummary)

# 1. Load data & transform
df <- readr::read_csv("hedonic_ames.csv")

# ---------------------------------------------------
# 1) Load & transform
# ---------------------------------------------------
df <- read_csv("hedonic_ames.csv") %>%
  mutate(
    ln_price = log(sale_price),
    ln_area  = log(gr_liv_area),
    overall_qual = factor(overall_qual, ordered = TRUE),
    overall_cond = factor(overall_cond, ordered = TRUE),
    exter_qual   = factor(exter_qual, ordered = TRUE),
    kitchen_qual = factor(kitchen_qual, ordered = TRUE),
    fireplace_qu = factor(fireplace_qu, ordered = TRUE),
    bldg_type    = factor(bldg_type),
    house_style  = factor(house_style),
    neighborhood = factor(neighborhood),
    baths_total  = full_bath + 0.5 * half_bath
  )

# ---------------------------------------------------
# 2) Run regression model
# ---------------------------------------------------
m0 <- lm(
  ln_price ~ ln_area + bedroom_abv_gr + baths_total + 
  total_bsmt_sf + garage_cars + central_air + overall_qual +
  overall_cond + exter_qual + kitchen_qual + fireplace_qu +
  bldg_type + house_style + neighborhood,
  data = df
)

# ---------------------------------------------------
# 3) DIAGNOSTICS (same tools/style as Supervision 4)
# ---------------------------------------------------
library(car)
library(lmtest)

# (A) Multicollinearity ‚Äì VIF
vif_raw <- car::vif(m0)
# If factors present, car::vif returns GVIF & Df; convert to VIF-equivalent:
if (is.matrix(vif_raw)) {
  vif_values <- vif_raw[, "GVIF"]^(1/(2 * vif_raw[, "Df"]))
  names(vif_values) <- rownames(vif_raw)
} else {
  vif_values <- vif_raw
}
vif_mean <- mean(vif_values, na.rm = TRUE)
vif_max  <- max(vif_values, na.rm = TRUE)

# (B) Autocorrelation ‚Äì Breusch‚ÄìGodfrey (lag 4)
bg_test <- lmtest::bgtest(m0, order = 4)

# (C) Heteroskedasticity ‚Äì White and Goldfeld‚ÄìQuandt
white_test <- lmtest::bptest(m0, varformula = ~ fitted(m0) + I(fitted(m0)^2))
gq_test    <- lmtest::gqtest(m0, order.by = ~ ln_area, data = df, fraction = 2/3)

# ---------------------------------------------------
# 4) Coefficient table with HAC (Newey‚ÄìWest) SEs ONLY
#    (simple: no prewhitening to avoid errors)
# ---------------------------------------------------
library(sandwich)
library(lmtest)
library(broom)
library(knitr)

vcov_HAC <- sandwich::NeweyWest(m0, lag = 4, prewhite = FALSE, adjust = TRUE)

ct_obj <- lmtest::coeftest(m0, vcov. = vcov_HAC)
ct_df  <- broom::tidy(ct_obj)  # safe data.frame for kable

knitr::kable(
  ct_df,
  digits  = 3,
  col.names = c("Term", "Estimate", "Std. Error", "Statistic", "Pr(>|t|)"),
  caption = "OLS with HAC (Newey‚ÄìWest) robust standard errors"
)

# ---------------------------------------------------
# 5) Diagnostics summary table (simple & readable)
# ---------------------------------------------------
diag_tab <- data.frame(
  Diagnostic = c(
    "Mean VIF",
    "Max VIF",
    "BG test p-value (lag 4)",
    "White test p-value",
    "Goldfeld‚ÄìQuandt p-value"
  ),
  Result = c(
    round(vif_mean, 3),
    round(vif_max, 3),
    signif(bg_test$p.value, 3),
    signif(white_test$p.value, 3),
    signif(gq_test$p.value, 3)
  ),
  check.names = FALSE
)

knitr::kable(
  diag_tab,
  digits  = 3,
  caption = "Diagnostics: multicollinearity, autocorrelation, heteroskedasticity"
)

```

> You may create graphs in your analysis, **but do not include images in the report** (text and tables only).

---

### Part C ‚Äî Competition, Criteria & Automated Assessment

#### The Golden Regression Challenge

Your model competes on **quality and clarity**, not just raw fit.  

### Judging Criteria (used by the automation)

1. **Theoretical consistency** ‚Äî expected signs and economic reasoning.  
2. **Specification quality** ‚Äî relevant variables, parsimony, no redundancy.  
3. **Interpretability** ‚Äî meaningful coefficients, multicollinearity controlled.  
4. **Diagnostics and fit** ‚Äî Adjusted¬†R¬≤, AIC, RMSE, residual checks.  
5. **Explanation of results** ‚Äî clear, concise, audience‚Äëappropriate summary.

### Scoring (overview)

- Model metrics (e.g., **Adjusted¬†R¬≤**, **BIC**, **RMSE**, **VIF mean**) complement the rubric.  
- A composite score ranks entries; the winner receives the **üèÖ Golden Regression Medal**.

---

## Submission

Submit **exactly two files** via the designated Microsoft Form:

1) **`model.R`** ‚Äî your complete, runnable R script (self‚Äëcontained).  
2) **`report.txt`** (or `.md`) ‚Äî **text‚Äëonly**, following the template below. No images; include a small metrics table.

### Submit via Microsoft Form

You can submit your files using the form below. If your browser or preview blocks embedded content, use the direct link provided under the form.

## Feedback form

**Open in a new tab:**  
[Fill out the form](https://forms.office.com/Pages/ResponsePage.aspx?id=RQSlSfq9eUut41R7TzmG6e2v58mrCWNIjQV8bfnU-6tUNUJVWlBHT1A0SDg1UVFZTVhBQUtBT1Y0UC4u)

::: {.content-visible when-format="html"}
<!-- Responsive 16:9 embed -->
<div style="position:relative; padding-top:56.25%; height:0; overflow:hidden; max-width:100%; border:0;">
  <iframe
    src="https://forms.office.com/Pages/ResponsePage.aspx?id=RQSlSfq9eUut41R7TzmG6e2v58mrCWNIjQV8bfnU-6tUNUJVWlBHT1A0SDg1UVFZTVhBQUtBT1Y0UC4u&embed=true"
    style="position:absolute; top:0; left:0; width:100%; height:100%; border:0;"
    frameborder="0"
    marginwidth="0"
    marginheight="0"
    allowfullscreen
    webkitallowfullscreen
    mozallowfullscreen
    msallowfullscreen>
  </iframe>
</div>
:::

::: {.content-visible unless-format="html"}
If you‚Äôre viewing a PDF or Word version, use this link to open the form:  
<https://forms.office.com/Pages/ResponsePage.aspx?id=RQSlSfq9eUut41R7TzmG6e2v58mrCWNIjQV8bfnU-6tUNUJVWlBHT1A0SDg1UVFZTVhBQUtBT1Y0UC4u>
:::


**Notes**  
- Do **not** include plots or screenshots in the report. Keep it text‚Äëonly.  
- Your identity is recorded at submission.


---

üèÅ  *End of lab  18*
üõë Remember to save your script üíæ

---

